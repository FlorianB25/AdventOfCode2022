import numpy as np

Stack1 = ['W','L','S']
Stack2 = ['J','T','N','Q']
Stack3 = ['S','C','H','F','J']
Stack4 = ['T','R','M','W','N','G','B']
Stack5 = ['T','R','L','S','D','H','Q','B']
Stack6 = ['M','J','B','V','F','H','R','L']
Stack7 = ['D','W','R','N','J','M']
Stack8 = ['B','Z','T','F','H','N','D','J']
Stack9 = ['H','L','Q','N','B','F','T']
CompleteStack = np.array([['W','L','S'],
                          ['J','T','N','Q'],
                          ['S','C','H','F','J'],
                          ['T','R','M','W','N','G','B'],
                          ['T','R','L','S','D','H','Q','B'],
                          ['M','J','B','V','F','H','R','L'],
                          ['D','W','R','N','J','M'],
                          ['B','Z','T','F','H','N','D','J'],
                          ['H','L','Q','N','B','F','T']], dtype=object)

move = [5,
2,
2,
2,
1,
10,
1,
1,
5,
1,
21,
13,
2,
1,
5,
1,
2,
1,
1,
7,
16,
7,
1,
1,
3,
1,
3,
21,
1,
4,
8,
6,
12,
6,
3,
1,
4,
3,
4,
4,
2,
1,
2,
5,
4,
5,
2,
1,
2,
11,
1,
2,
3,
2,
6,
2,
1,
7,
2,
13,
16,
3,
12,
15,
2,
16,
24,
1,
1,
3,
26,
20,
1,
16,
14,
13,
3,
3,
1,
5,
8,
18,
4,
6,
2,
5,
5,
2,
5,
3,
22,
1,
5,
2,
1,
5,
1,
5,
6,
3,
1,
8,
6,
5,
27,
4,
9,
1,
3,
9,
2,
1,
10,
1,
25,
6,
11,
3,
3,
3,
11,
1,
12,
13,
1,
3,
5,
1,
5,
3,
3,
2,
12,
5,
2,
6,
11,
1,
1,
1,
1,
1,
2,
2,
5,
2,
2,
1,
1,
35,
2,
3,
5,
3,
2,
4,
4,
3,
1,
4,
1,
38,
1,
1,
4,
3,
22,
1,
7,
8,
3,
4,
1,
1,
2,
5,
3,
2,
6,
6,
2,
1,
14,
4,
8,
4,
3,
1,
1,
9,
8,
4,
2,
3,
1,
1,
1,
3,
2,
4,
3,
3,
9,
1,
3,
2,
4,
7,
19,
5,
2,
1,
4,
21,
1,
1,
1,
16,
24,
7,
1,
2,
31,
1,
2,
1,
3,
1,
2,
1,
1,
1,
24,
1,
30,
2,
1,
6,
1,
1,
23,
21,
4,
3,
1,
4,
3,
8,
4,
2,
7,
3,
9,
1,
6,
14,
4,
7,
1,
6,
13,
5,
1,
1,
4,
6,
2,
5,
3,
1,
2,
3,
1,
1,
3,
6,
2,
1,
11,
9,
3,
1,
2,
9,
22,
2,
3,
14,
1,
19,
3,
2,
1,
1,
8,
2,
1,
3,
1,
20,
4,
1,
26,
1,
8,
1,
1,
1,
1,
4,
3,
5,
2,
3,
2,
5,
5,
19,
1,
2,
1,
1,
13,
8,
10,
14,
7,
1,
6,
4,
2,
1,
3,
1,
7,
5,
8,
3,
3,
5,
5,
1,
17,
1,
12,
3,
2,
8,
4,
1,
5,
4,
3,
2,
6,
4,
4,
1,
3,
17,
6,
14,
1,
1,
3,
5,
6,
2,
4,
1,
1,
10,
1,
1,
15,
3,
6,
1,
2,
2,
1,
2,
1,
12,
4,
4,
1,
6,
1,
2,
11,
3,
17,
15,
1,
10,
1,
2,
1,
4,
4,
6,
2,
9,
6,
3,
10,
4,
1,
5,
1,
1,
2,
13,
5,
2,
1,
4,
17,
3,
2,
7,
1,
1,
2,
1,
4,
2,
3,
10,
2,
6,
4,
8,
1,
5,
7,
5,
5,
4,
6,
3,
22,
1,
8,
1,
2,
4,
7,
2,
14,
7,
12,
1,
2,
2,
1,
6,
6,
2,
6,
13,
5,
5,
2,
1,
1,
3,
6,
1,
24,
7,
13,
4,
4,
1,
16,
1,
1,
5,
11,
4,
1,
2,
6,
1,
2,
1,
4,
8,
3,
1,
5,
1,
2,
1,
6,
1,
5,
4,
4,
8]

von = [3,
4,
8,
8,
4,
4,
3,
0,
2,
1,
7,
4,
8,
6,
0,
4,
1,
2,
0,
4,
6,
8,
6,
2,
1,
7,
2,
3,
4,
3,
5,
6,
8,
6,
5,
5,
7,
7,
0,
5,
0,
4,
1,
7,
1,
7,
0,
7,
0,
8,
7,
8,
8,
4,
4,
3,
4,
0,
1,
7,
2,
1,
6,
0,
2,
0,
1,
0,
4,
5,
7,
2,
1,
8,
2,
0,
2,
8,
6,
7,
7,
5,
7,
3,
1,
2,
7,
4,
4,
1,
0,
0,
7,
4,
0,
4,
8,
3,
5,
0,
0,
8,
6,
5,
1,
4,
0,
8,
5,
1,
6,
7,
4,
8,
0,
6,
0,
7,
1,
7,
7,
1,
5,
3,
5,
6,
7,
6,
0,
5,
7,
4,
4,
5,
4,
3,
6,
1,
6,
4,
6,
7,
3,
5,
2,
6,
1,
1,
0,
8,
7,
2,
1,
2,
3,
5,
4,
3,
7,
8,
8,
6,
2,
0,
6,
5,
1,
4,
7,
1,
4,
2,
7,
2,
1,
7,
8,
0,
1,
2,
2,
5,
6,
0,
0,
2,
8,
7,
7,
6,
1,
1,
1,
4,
7,
6,
5,
8,
8,
2,
5,
5,
3,
8,
2,
6,
7,
4,
0,
8,
0,
3,
2,
8,
0,
8,
0,
6,
5,
3,
7,
1,
4,
3,
5,
6,
6,
3,
2,
1,
2,
6,
7,
7,
5,
4,
5,
8,
5,
3,
0,
2,
1,
5,
4,
0,
8,
0,
7,
6,
3,
3,
2,
6,
4,
5,
7,
3,
6,
3,
1,
2,
2,
7,
7,
5,
1,
3,
6,
6,
2,
6,
6,
6,
3,
5,
6,
2,
8,
3,
2,
2,
7,
0,
4,
0,
3,
7,
2,
8,
8,
6,
3,
2,
2,
8,
1,
3,
1,
7,
8,
3,
2,
7,
0,
2,
1,
0,
5,
4,
3,
4,
1,
2,
3,
2,
8,
4,
4,
6,
0,
6,
8,
5,
2,
4,
7,
5,
2,
8,
8,
6,
1,
4,
7,
5,
3,
4,
7,
6,
2,
8,
3,
7,
6,
0,
3,
5,
5,
6,
4,
6,
1,
4,
0,
2,
4,
3,
2,
7,
5,
3,
2,
6,
7,
1,
0,
5,
4,
0,
5,
6,
4,
1,
3,
2,
1,
1,
3,
6,
3,
0,
6,
8,
8,
5,
6,
1,
7,
3,
0,
0,
4,
5,
7,
3,
2,
5,
1,
4,
0,
5,
1,
3,
0,
3,
8,
1,
0,
7,
1,
8,
5,
6,
6,
4,
3,
7,
1,
3,
8,
5,
4,
3,
8,
2,
2,
7,
6,
4,
1,
0,
5,
1,
6,
3,
5,
2,
4,
7,
0,
2,
5,
8,
7,
6,
4,
7,
5,
5,
1,
0,
6,
3,
4,
7,
3,
1,
8,
1,
6,
2,
1,
5,
2,
5,
5,
0,
1,
1,
4,
2,
6,
0,
0,
4,
8,
5,
4,
0,
1,
8,
3,
2,
5,
0,
8,
6,
1,
8,
2,
8,
0,
3,
0,
7,
4,
4,
1,
0,
6,
4]

zu = [4,
7,
0,
0,
2,
7,
6,
1,
6,
7,
4,
6,
3,
3,
3,
6,
6,
1,
5,
8,
3,
2,
4,
7,
6,
8,
5,
8,
6,
8,
2,
0,
7,
1,
4,
8,
5,
4,
7,
0,
2,
7,
7,
2,
6,
0,
6,
1,
6,
1,
4,
3,
4,
0,
7,
1,
5,
7,
6,
0,
0,
0,
5,
7,
7,
1,
7,
4,
7,
6,
2,
8,
8,
2,
0,
5,
3,
3,
7,
1,
4,
0,
4,
0,
4,
7,
6,
7,
3,
7,
1,
1,
1,
1,
5,
1,
7,
0,
8,
8,
6,
5,
0,
4,
0,
6,
4,
0,
1,
0,
1,
6,
8,
6,
7,
3,
6,
0,
5,
8,
5,
5,
3,
4,
0,
4,
6,
0,
5,
3,
5,
1,
8,
1,
8,
8,
2,
4,
7,
6,
0,
0,
6,
7,
5,
1,
8,
8,
5,
6,
6,
7,
3,
6,
6,
4,
8,
4,
2,
7,
5,
1,
4,
6,
2,
0,
6,
7,
3,
7,
0,
8,
2,
6,
2,
8,
0,
6,
2,
0,
5,
0,
1,
5,
2,
5,
4,
5,
3,
0,
3,
8,
0,
7,
5,
7,
4,
4,
4,
8,
2,
8,
0,
7,
5,
3,
4,
5,
8,
2,
5,
5,
1,
6,
1,
0,
7,
5,
4,
4,
2,
7,
7,
5,
8,
3,
8,
7,
4,
2,
6,
8,
5,
0,
0,
1,
8,
6,
3,
5,
2,
3,
5,
0,
0,
8,
5,
5,
4,
4,
2,
8,
8,
5,
7,
1,
3,
4,
8,
2,
5,
6,
7,
1,
2,
3,
7,
6,
4,
8,
8,
2,
8,
8,
0,
0,
4,
4,
3,
4,
3,
8,
0,
7,
7,
2,
5,
8,
8,
2,
3,
1,
5,
7,
0,
5,
4,
8,
2,
2,
4,
1,
4,
2,
3,
6,
0,
5,
6,
2,
1,
2,
5,
4,
7,
8,
7,
8,
1,
0,
6,
3,
2,
1,
4,
3,
3,
1,
7,
6,
7,
0,
6,
2,
5,
1,
4,
7,
5,
8,
5,
3,
6,
0,
7,
3,
5,
0,
2,
7,
7,
0,
5,
0,
5,
4,
2,
7,
1,
3,
2,
8,
7,
3,
2,
4,
6,
3,
6,
4,
2,
3,
3,
2,
4,
0,
5,
2,
6,
7,
1,
6,
1,
0,
4,
1,
2,
3,
4,
1,
6,
3,
5,
3,
8,
0,
8,
4,
5,
5,
1,
6,
5,
8,
1,
0,
7,
0,
1,
5,
6,
3,
8,
1,
4,
1,
4,
3,
5,
5,
0,
7,
1,
0,
3,
8,
6,
4,
4,
7,
3,
1,
2,
5,
3,
4,
6,
4,
1,
0,
5,
1,
1,
6,
5,
5,
6,
4,
6,
3,
0,
2,
2,
2,
7,
0,
2,
8,
1,
6,
4,
4,
5,
0,
5,
4,
0,
8,
6,
2,
1,
6,
8,
8,
5,
5,
4,
3,
1,
2,
0,
5,
6,
3,
8,
2,
3,
8,
8,
1,
1,
3,
6,
7,
8,
6,
2,
0,
2,
4,
0,
7]

runs = 0
m = 0
d = 0
length = 502

while runs < length:
    
    i = 0
    v = 0
    d = 0

    while i < move[m]:
        
        ##print(CompleteStack[zu[runs]])
        ##print(CompleteStack[von[runs]])
        ##print(int(len(CompleteStack[von[runs]])-move[m]+d))

        CompleteStack[zu[runs]].append(CompleteStack[von[runs]][int(len(CompleteStack[von[runs]])-move[m]+d)])      

        i = i+1
        d = d+1

    i = 0 

    while i < move[m]:
        del CompleteStack[von[runs]][int(len(CompleteStack[von[runs]])-1)]
        i = i+1

    runs = runs+1
    m = m+1

print (CompleteStack)
